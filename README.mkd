#Vis Client

vis_client é um cliente assíncrono do projeto de visualização do [redu](https://github.com/redu/redu)

###Gems utilizadas
* [eventmachine](https://github.com/eventmachine/eventmachine)
* [em-http-request](https://github.com/igrigorik/em-http-request)

###Instalação
#####No Gemfile
```ruby
gem 'vis_client', :git => 'git@github.com:redu/vis_client.git'
```

##Utilização

Para utilizar os métodos de vis_client é preciso incluir VisClient na classe:

```ruby
module SendNotification
  include VisClient
end
```

E chamar o método ``send_async_info`` passando os paramêtros e a url. Os paramêtros serão enviados no formato ``JSON`` assíncronamente para a url de vis.

#####Exemplo
```ruby
params = {
  :user_id => 139,
  :type => "enrollment",
  :course_id => 4,
  :space_id => 62,
  :subject_id => 348
}

send_async_info(params, "http://localhost:4000/hierarchy_notifications.json")
#<HierarchyNotification _id: 4f96097302d1520a02000002, statusable_type: nil, type: "enrollment", updated_at: Thu Feb 10 20:10:02 UTC 2011, course_id: 47, lecture_id: nil, created_at: Thu Feb 10 20:10:02 UTC 2011, grade: nil, subject_id: 21, in_response_to_id: nil, statusable_id: nil, in_response_to_type: nil, status_id: nil, space_id: 24, user_id: 139, _type: nil>
```

Requisições que geram status code de erro ou entram em timeout são registradas em ``log/error.log``

##TODO
1. Retirar a senha e usuário que autenticam o usuário de vis do código.
2. Enviar várias requisições em paralelo.
3. Implementar testes

